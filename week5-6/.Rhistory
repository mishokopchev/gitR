data1=read.table("/home/tsveti/Documents/1 мпВС/1 ВС/R/week4/merge1.dat", header=TRUE)
data2=read.table("/home/tsveti/Documents/1 мпВС/1 ВС/R/week4/merge2.dat", header=TRUE)
View(data1)
View(data2)
merge(all=TRUE)
merge(data1, data2, all=TRUE)
merge(data1, data2, all.x=TRUE)
merge(data1, data2, all=FALSE)
merge(data1, data2, all=TRUE)
merge(data1, data2, all.x =TRUE)
merge(data1, data2, all=FALSE)
M = merge(data1, data2, all=TRUE)
N = merge(data1, data2, all.x =TRUE)
P = merge(data1, data2, all=FALSE)
Q = merge(data1, data2, all.y=TRUE)
Q
dnbinom(1,2,1/2)
dnbinom(2,2,1/2)
dnbinom(3,2,1/2)
dnbinom(4,2,1/2)
pnbinom(4, 2, 1/2, lower.tail=FALSE)
v1=dnbinom(1,2,1/2)
v2=dnbinom(2,2,1/2)
v3=dnbinom(3,2,1/2)
v4=dnbinom(4,2,1/2)
d1=pnbinom(4, 2, 1/2, lower.tail=FALSE)
w1=dnbinom(1,2,2/5)
w2=dnbinom(2,2,2/5)
w3=dnbinom(3,2,2/5)
w4=dnbinom(4,2,2/5)
v1=dnbinom(1,2,1/2)
v1
v2=dnbinom(2,2,1/2)
v2
v3=dnbinom(3,2,1/2)
v3
v4=dnbinom(4,2,1/2)
v4
d1=pnbinom(4, 2, 1/2, lower.tail=FALSE)
d1
w1=dnbinom(1,2,2/5)
w1
w2=dnbinom(2,2,2/5)
w2
w3=dnbinom(3,2,2/5)
w3
w4=dnbinom(4,2,2/5)
w4
W=matrix(c(w1,w2,w3,w4),nrow=2,ncol = 2)
View(W)
V=matrix(c(v1,v2,v3,v4),nrow=2,ncol=2)
W=matrix(c(w1,w2,w3,w4),nrow=2,ncol = 2)
V
W#zad4, negative binomial
odds1=v1*v3/v2*v4
odds1
odds1=(v1*v3)/(v2*v4)
odds1
odds2
odds2 = (w1*w3)/(w2*w4)
odds2
install.packages(oddsratio)
v1=dnbinom(1,2,1/2)
v1
v2=dnbinom(2,2,1/2)
v2
v3=dnbinom(3,2,1/2)
v3
v4=dnbinom(4,2,1/2)
v4
d1=pnbinom(4, 2, 1/2, lower.tail=FALSE)
d1
w1=dnbinom(1,2,2/5)
w1
w2=dnbinom(2,2,2/5)
w2
w3=dnbinom(3,2,2/5)
w3
w4=dnbinom(4,2,2/5)
w4
v1=dnbinom(1,2,1/2)
v1
v2=dnbinom(2,2,1/2)
v2
v3=dnbinom(3,2,1/2)
v3
v4=dnbinom(4,2,1/2)
v4
d1=pnbinom(4, 2, 1/2, lower.tail=FALSE)
d1
w1=dnbinom(1,2,2/5)
w1
w2=dnbinom(2,2,2/5)
w2
w3=dnbinom(3,2,2/5)
w3
w4=dnbinom(4,2,2/5)
w4
V=matrix(c(v1, w1, (1-v1), (1-w1), v2, w2, (1-v2), (1-w2), v3, w3, (1-v3), (1-w3), v4, w4, (1-v4), (1-w4), ),nrow=4,ncol=4)
V
V=matrix(c(v1, w1, (1-v1), (1-w1), v2, w2, (1-v2), (1-w2), v3, w3, (1-v3), (1-w3), v4, w4, (1-v4), (1-w4), ),nrow=4,ncol=4)
V=matrix(c(v1, w1, (1-v1), (1-w1), v2, w2, (1-v2), (1-w2), v3, w3, (1-v3), (1-w3), v4, w4, (1-v4), (1-w4)),nrow=4,ncol=4)
V
success=c(0:6)
dhyper(success,6,30,6)
success=c(0:6)
dhyper(success,6,30,6)
ppois(16.lambda=12)
ppois(16,lambda=12)
?hyper
?dhyper
dhyper(success, 35, 100, 35)
phyper(success, 35, 100, 35)
phyper(success=1, 35, 100, 35)
phyper(success, 35, 100, 35)
phyper(35, 0.4*600000, 0.6*600000, 100)
phyper(35, 0.4*600000, 0.6*600000, 100, lower.tail = FALSE)
pop=rep(c(0,1), c(360000,240000))
mean(pop)
sample(pop(100))
pop=rep(c(0,1), c(360000,240000))
mean(pop)
sample(pop(100))
sample(pop, 100)
sample(pop, 100)
sum(sample(pop, 100))
sample(pop, 100)
sum(sample(pop, 100))
sample(pop, 100)
sum(sample(pop, 100))
sapply(1:1000, sample(pop, 100))
sapply(1:1000, sample(pop, 100), FUN = sum)
sapply(1:1000, function(x)=sample(pop, 100))
sapply(1:1000, function(x)(sample(pop, 100))
sapply(1:1000, function(x)(sample(pop, 100)))
sapply(1:1000, function(x)(sum(sample(pop, 100))))
s=sapply(1:1000, function(x)(sum(sample(pop, 100))))
frequency(s)
frequency(s)
s=sapply(1:1000, function(x)(sum(sample(pop, 100))))
s
s [s<=35]
length(s [s<=35])
length(s [s<=35])/1000
?Aids
?Aids2
??Aids2
library("MASS")
??Aids2
library("MASS")
?Aids2
str(Aids2$state)
attach(Aids2)
state
table(state, status)
t = table(state, status)
barplot(t)
t = table(status, state)
barplot(t)
prop.table(t,1)
p = prop.table(t,1)
barplot(p)
p = prop.table(t,2)
barplot(p)
1
1
p = prop.table(t,1)
barplot(p)
p = prop.table(t,2) #probabilities; 1 for dividing the elements of the sum of the rows; 2 - for columns.
barplot(p)
p
prop.test(p[1],p[2], alternative = "two.sided", conf.level = 0.95)
p
p
t
prop.test(c(664, 233),c(1116+664, 355+233))
yesbelt = c(12813,647,359,42)
nobelt = c(65963,4000,2642,303)
chisq.test(data.frame(yesbelt,nobelt))
Pearson’s Chi-squared test
data: data.frame(yesbelt, nobelt)
chisq.test(data.frame(yesbelt,nobelt))
d=data.frame(yesbelt,nobelt)
is(d)
chisq.test(data.frame(yesbelt,nobelt))
face = c(1,2,3,4,5,6)
numberofrolls = c( 22,21,22,27,22,36)
probs=c(1,1,1,1,1,1)/6
chisq.test(numberofrolls, p=probs)
male=c(50,100-50) # deny
female=c(76,200-76)
prop.test(male, female, alternative = "less", conf.level = 0.01)
male=c(50,100-50) # deny
female=c(76,200-76)
prop.test(male, female, alternative = "less", conf.level = 0.01)
prop.test(c(50,76), c(100,200), alternative = "greater")
library(MASS)
d= data.frame(cats)
?cats
x=cats$Bwt[cats$Sex=='M']
x=cats$Bwt[cats$Sex=='M']
y=cats$Hwt[cats$Sex=='M']
plot(x,y)
l=lm(y~x)
l
abline(l)
summary(l)
data1=data.frame(x=2.6)
predict(l, data1)
predict.lm(l, data1, interval='confidence', level = 0.95)
l$residuals
residuals(l)
rm(list=ls())
x=seq(0,50,by=1)
y=dbinom(x,50,0.2)
plot(x,y)
y=dbinom(x, 50, 0.5)
plot(x,y)
sum(dbinom(c(1:24), 50, 1/2))
pbinom(24,50,0.5)
plot(sum(dbinom(c(1:24), 50, 1/2)), pbinom(24,50,0.5))
qbinom(0.4438624, 50, 1/2)
qbinom(0.5561376, 50, 1/2)
rbinom(5,10,0.2)
rbinom(5,100,0.2)
n=50
k=21
(1/(2^(n)))*(1/(2^(n-k)))*choose(n+n-k,n)
choose(100-21, 50)*2^(21-100)
dbinom(29, 79, 1/2)
v1=dnbinom(1,2,1/2)
v1
v2=dnbinom(2,2,1/2)
v2
v3=dnbinom(3,2,1/2)
v3
v4=dnbinom(4,2,1/2)
v4
d1=pnbinom(4, 2, 1/2, lower.tail=FALSE)
d1
w1=dnbinom(1,2,2/5)
w1
w2=dnbinom(2,2,2/5)
w2
w3=dnbinom(3,2,2/5)
w3
w4=dnbinom(4,2,2/5)
w4
V=matrix(c(v1, w1, (1-v1), (1-w1), v2, w2, (1-v2), (1-w2), v3, w3, (1-v3), (1-w3), v4, w4, (1-v4), (1-w4)),nrow=4,ncol=4)
V
p=0.7
r=3
success=c(0:6)
dhyper(success,6,30,6)
ppois(16,lambda=12)
phyper(35, 0.4*600000, 0.6*600000, 100)
pop=rep(c(0,1), c(360000,240000))
mean(pop)
sample(pop, 100)
sum(sample(pop, 100))
sample(pop, 100)
sum(sample(pop, 100))
s=sapply(1:1000, function(x)(sum(sample(pop, 100))))
s [s<=35]
length(s [s<=35])
length(s [s<=35])/1000
dpois(2, lambda=10)
dpois(2, lambda=10)
ppois(2, 10, lower.tail = FALSE)
ppois(2, 10)
ppois(2, 10, lower.tail = TRUE)
dpois(2, lambda=10)
ppois(2, 10, lower.tail = TRUE)
ppois(2, 10)
dpois(2, lambda=10)
ppois(2, 10, lower.tail = FALSE)
ppois(2, 10)
x=runif(100,0,2)
hist(x, probability = TRUE, col=gray(.9), main="uniform on [0,2]")
curve(dunif(x,0,2),add=T)
x=rexp(100,1/2500)
hist(x, probability = TRUE, col=gray(.9), main="exponential mean=2500")
curve(dexp(x,1/2500), add=T)
x=rexp(100,1/2500)
hist(x, probability = TRUE, col=gray(.9), main="exponential mean=2500")
hist(x, probability = TRUE, col=gray(.9), main="exponential mean=2500")
curve(dexp(x,1/2500), add=T)
x=c(1:200)
plot(dnorm(x,100,10), ylim=c(0,0.1))
lines(dnorm(x,100,5), col="red")
lines(dnorm(x,130,10), col="blue")
Y=0:10
plot(Y, dgeom(Y, 1/3), type="l", col="green", ylim = c(0,1))
lines(dgeom(Y, 2/3), col="red")
lines(dgeom(Y, 1/2), col="blue")
X=1:30
pexp(30,1/5)
1-pexp(30,1/5)
plot(X, 1-pexp(X, 1/5), type="l", col="blue", xlim=c(0,31))
plot(X, dexp(X, 1/5), type="l", col="blue", xlim=c(0,31))
x=rnorm(500,5,sqrt(5))
hist(x, col=gray(.9), main="N(5,5)")
z=(x-5)/sqrt(5)
hist(z, col=gray(.9), main="N(5,5)")
hist(x, col=gray(.9), main="N(5,5)")
z=(x-5)/sqrt(5)
hist(z, col=gray(.9), main="N(5,5)")
pnorm(z)
pnorm(0.92, lower.tail = FALSE)
pnorm(0.92, lower.tail = TRUE)
pnorm(-0.5, lower.tail = FALSE)
pnorm(0.5)
a=pnorm(-0.64, lower.tail = FALSE)
b=pnorm(0.43, lower.tail = TRUE)
p=a-(1-b)
p
pnorm(6.2, 3,2, lower.tail = TRUE)
pnorm(3100, 3500,500, lower.tail = TRUE)
x1=pnorm(80,10)
y1=pnorm(78,13)
pnorm(x1-y1>0, 2, sqrt(269), lower.tail = FALSE)
sqrt(10^2+ 13^2)
sqrt(269)
data = read.csv(url("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv"))
head(data)
plot(data)
data$Timestamp=as.POSIXct(data$Timestamp)
start.date=as.POSIXct("2012-01-12 12:00:00")
end.date=as.POSIXct("2012-01-12  14:00")
data1 = read.table(url("http://www.math.bas.bg/statlab/tchorbadjieff/merge1.dat"))
data2 = read.table(url("http://www.math.bas.bg/statlab/tchorbadjieff/merge2.dat"))
M = merge(data1, data2, all=TRUE)
N = merge(data1, data2, all.x =TRUE)
P = merge(data1, data2, all=FALSE)
Q = merge(data1, data2, all.y=TRUE)
Q
rm(list=ls())
qnorm(1-0.05/2)
q1=qnorm(0.25)
q2=qnorm(0.5)
q3=qnorm(0.75)
lower = q1-1.5*(q3-q1)
upper = q3+1.5*(q3-q1)
tmp.list = list(stats=rbind(lower, q1, q2, q3, upper), out=numeric(0), group=numeric(0), names='')
bxp(tmp.list)
s=rbinom(n=10000,size=1000, prob=1/2)
s
z=(s-10000*1/2)/sqrt(10000*1/2*1/2)
z
hist(s, prob=T)
hist(z, prob=T)
s=rbinom(n=10000,size=10000, prob=1/3)
s
z=(s-10000*1/3)/sqrt(10000*1/3*2/3)
z
hist(s, prob=T)
hist(z, prob=T)
x=rbinom(1000,100, 1/2)
x=rbinom(1000,100, 1/2)
p_hat = mean(x)/100
p_hat
y=p_hat
z_star = qnorm(1-0.05/2)
SE=sqrt(p_hat*(1-p_hat)/100)
SE
low_CI = p_hat-z_star*SE
z=low_CI
low_CI
high_CI = p_hat+z_star*SE
h=high_CI
high_CI
plot(x/100, type="l", col="gray")
lines(rep(p_hat, 1000), type="l", col="blue")
lines(rep(low_CI,1000), type="l", col="red")
lines(rep(high_CI,1000), type="l", col="red")
plot(x/100, type="p", col="gray")
lines(rep(p_hat, 1000), type="l", col="blue")
lines(rep(low_CI,1000), type="l", col="red")
lines(rep(high_CI,1000), type="l", col="red")
x=c(102.5,101.7,103.1,100.9,100.5,102.2)
sigma=1.2
x_hat= (102.5+101.7+103.1+100.9+100.5+102.2)/6
x_hat= (102.5+101.7+103.1+100.9+100.5+102.2)/6
x_hat=mean(x)
z_s = qnorm(1-0.05/2)
z_s
z_s
CI_low = x_hat-z_s*sigma/sqrt(6)
CI_low
CI_high = x_hat+z_s*sigma/sqrt(6)
CI_high
c(CI_low, CI_high)
outL=x[which(x<CI_low | x>CI_high)]
outL
qnorm(1-0.05/2)
qt(1-0.05/2, 100 )
qt(1-0.05/2, 1000 )
?morley
x=morley[,3]
x=morley[,3]
s=sd(x)
s
length(morley[,3])
tstar=qt(1-0.05/2,length(morley[,3]))
m=mean(morley[,3])
lowCI=m-tstar*s/sqrt(100)
hiCI=m+tstar*s/sqrt(100)
c(lowCI, hiCI)
outL=x[which(x<lowCI | x>hiCI)]
outL
length(outL)
tstar=qt(1-0.003/2,length(morley[,3]))
lowCI=m-tstar*s/sqrt(100)
hiCI=m+tstar*s/sqrt(100)
c(lowCI, hiCI)
outL=x[which(x<lowCI | x>hiCI)]
outL
length(outL)
boxplot(x)
